using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System;
using System.IO;
using System.Collections.Generic;

namespace StaticAnalysisTool
{
    class Program
    {
        static void Main(string[] args)
        {
            // Ensure directory to analyze is specified
            if (args.Length == 0)
            {
                Console.WriteLine("Error: No directory specified. Usage: StaticAnalysisTool.exe <directory path>");
                return;
            }

            string directory = args[0];
            if (!Directory.Exists(directory))
            {
                Console.WriteLine($"Error: The specified directory does not exist: {directory}");
                return;
            }

            // Define expected critical files and their basic checks
            var criticalFiles = new Dictionary<string, Func<string, bool>>
            {
                ["ModController.cs"] = path => FileContainsText(path, "class ModController"),
                ["Program.cs"] = path => FileContainsText(path, "static void Main"),
                ["About\\about.xml"] = path => FileContainsText(path, "<ModMetaData>"),
                ["Def\\Items.xml"] = path => FileContainsText(path, "<ThingDef>")
            };

            bool allFilesExist = true;
            foreach (var file in criticalFiles.Keys)
            {
                string fullPath = Path.Combine(directory, file);
                if (!File.Exists(fullPath))
                {
                    Console.WriteLine($"Missing critical file: {fullPath}");
                    allFilesExist = false;
                }
                else if (!criticalFiles[file](fullPath))
                {
                    Console.WriteLine($"Validation failed for file: {fullPath}");
                    allFilesExist = false;
                }
            }

            Console.WriteLine(allFilesExist ? "All critical files are present and valid." : "Some critical files are missing or invalid.");
        }

        // Utility method to check if a file contains a specific text
        private static bool FileContainsText(string filePath, string text)
        {
            return File.ReadAllLines(filePath).Any(line => line.Contains(text));
        }
    }
}
